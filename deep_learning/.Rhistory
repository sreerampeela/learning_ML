"odds_95%" = paste(lapply(cat_results$odd_ratio_CI,
round), "-"))
sign_features <- cat_results_df[cat_results_df$pval<0.05, "feature"]
print(sign_features)
View(cat_results_df)
cat_results_df <- data.frame("feature" = cat_results$feature_names,
"pval" = cat_results$pvalues,
"odds" = round(cat_results$odds_ratio, 3),
"odds_95%" = paste(sapply(cat_results$odd_ratio_CI,
round), "-"))
sign_features <- cat_results_df[cat_results_df$pval<0.05, "feature"]
print(sign_features)
View(cat_results_df)
cat_results_df <- data.frame("feature" = cat_results$feature_names,
"pval" = cat_results$pvalues,
"odds" = round(cat_results$odds_ratio, 3),
"odds_95%" = paste(sapply(cat_results$odd_ratio_CI,
round, 3), "-"))
sign_features <- cat_results_df[cat_results_df$pval<0.05, "feature"]
print(sign_features)
View(cat_results_df)
cat_results$odd_ratio_CI
cat_results <- list(pvalues = c(), odds_ratio = c(), odd_ratio_CI = c(),
feature_names = c(), cont_tables = c())
#using fisher test or chisquare test for categorical associations
cat_features <- c(2,3,7,8,9)
for (i in cat_features) {
unique_cats <- unique(df[ , i])
cross_tab <- table(df[ , i], df[ , "Exited"])
colName <- colnames(df)[i]
cat_results$feature_names <- c(cat_results$feature_names, colName )
cat_results$cont_tables <- c(cat_results$feature_names, cross_tab)
if (length(unique_cats) == 2) {
# run Fisher test
fisher_test <- fisher.test(cross_tab, conf.int = TRUE, conf.level = 0.95)
cat_results$pvalues <- c(cat_results$pvalues, fisher_test$p.value)
cat_results$odds_ratio <- c(cat_results$odds_ratio, fisher_test$estimate)
cat_results$odd_ratio_CI <- c(cat_results$odd_ratio_CI, fisher_test$conf.int)
} else {
# run chisquare test
# no odds ratio for chi-square test
chi_test <- chisq.test(cross_tab)
cat_results$pvalues <- c(cat_results$pvalues, chi_test$p.value)
cat_results$odds_ratio <- c(cat_results$odds_ratio, NA)
cat_results$odd_ratio_CI <- c(cat_results$odd_ratio_CI, c(NA, NA))
}
}
print(cat_results)
cat_results <- list(pvalues = c(), odds_ratio = c(), odd_ratio_CI = c(),
feature_names = c(), cont_tables = c())
#using fisher test or chisquare test for categorical associations
cat_features <- c(2,3,7,8,9)
for (i in cat_features) {
unique_cats <- unique(df[ , i])
cross_tab <- table(df[ , i], df[ , "Exited"])
colName <- colnames(df)[i]
cat_results$feature_names <- c(cat_results$feature_names, colName )
cat_results$cont_tables <- c(cat_results$cont_tables, cross_tab)
if (length(unique_cats) == 2) {
# run Fisher test
fisher_test <- fisher.test(cross_tab, conf.int = TRUE, conf.level = 0.95)
cat_results$pvalues <- c(cat_results$pvalues, fisher_test$p.value)
cat_results$odds_ratio <- c(cat_results$odds_ratio, fisher_test$estimate)
cat_results$odd_ratio_CI <- c(cat_results$odd_ratio_CI, fisher_test$conf.int)
} else {
# run chisquare test
# no odds ratio for chi-square test
chi_test <- chisq.test(cross_tab)
cat_results$pvalues <- c(cat_results$pvalues, chi_test$p.value)
cat_results$odds_ratio <- c(cat_results$odds_ratio, NA)
cat_results$odd_ratio_CI <- c(cat_results$odd_ratio_CI, c(NA, NA))
}
}
print(cat_results)
cat_results <- list(pvalues = c(), odds_ratio = c(), odd_ratio_CI = c(),
feature_names = c(), cont_tables = c())
#using fisher test or chisquare test for categorical associations
cat_features <- c(2,3,7,8,9)
for (i in cat_features) {
unique_cats <- unique(df[ , i])
cross_tab <- matrix(table(df[ , i], df[ , "Exited"]))
colName <- colnames(df)[i]
cat_results$feature_names <- c(cat_results$feature_names, colName )
cat_results$cont_tables <- c(cat_results$cont_tables, cross_tab)
if (length(unique_cats) == 2) {
# run Fisher test
fisher_test <- fisher.test(cross_tab, conf.int = TRUE, conf.level = 0.95)
cat_results$pvalues <- c(cat_results$pvalues, fisher_test$p.value)
cat_results$odds_ratio <- c(cat_results$odds_ratio, fisher_test$estimate)
cat_results$odd_ratio_CI <- c(cat_results$odd_ratio_CI, fisher_test$conf.int)
} else {
# run chisquare test
# no odds ratio for chi-square test
chi_test <- chisq.test(cross_tab)
cat_results$pvalues <- c(cat_results$pvalues, chi_test$p.value)
cat_results$odds_ratio <- c(cat_results$odds_ratio, NA)
cat_results$odd_ratio_CI <- c(cat_results$odd_ratio_CI, c(NA, NA))
}
}
cat_results <- list(pvalues = c(), odds_ratio = c(), odd_ratio_CI = c(),
feature_names = c(), cont_tables = c())
#using fisher test or chisquare test for categorical associations
cat_features <- c(2,3,7,8,9)
for (i in cat_features) {
unique_cats <- unique(df[ , i])
cross_tab <- table(df[ , i], df[ , "Exited"])
colName <- colnames(df)[i]
cat_results$feature_names <- c(cat_results$feature_names, colName )
cat_results$cont_tables <- c(cat_results$cont_tables, matrix(cross_tab))
if (length(unique_cats) == 2) {
# run Fisher test
fisher_test <- fisher.test(cross_tab, conf.int = TRUE, conf.level = 0.95)
cat_results$pvalues <- c(cat_results$pvalues, fisher_test$p.value)
cat_results$odds_ratio <- c(cat_results$odds_ratio, fisher_test$estimate)
cat_results$odd_ratio_CI <- c(cat_results$odd_ratio_CI, fisher_test$conf.int)
} else {
# run chisquare test
# no odds ratio for chi-square test
chi_test <- chisq.test(cross_tab)
cat_results$pvalues <- c(cat_results$pvalues, chi_test$p.value)
cat_results$odds_ratio <- c(cat_results$odds_ratio, NA)
cat_results$odd_ratio_CI <- c(cat_results$odd_ratio_CI, c(NA, NA))
}
}
print(cat_results)
print(cross_tab)
cat_results <- list(pvalues = c(), odds_ratio = c(), odd_ratio_CI = c(),
feature_names = c(), cont_tables = c())
#using fisher test or chisquare test for categorical associations
cat_features <- c(2,3,7,8,9)
for (i in cat_features) {
unique_cats <- unique(df[ , i])
cross_tab <- table(df[ , i], df[ , "Exited"])
colName <- colnames(df)[i]
cat_results$feature_names <- c(cat_results$feature_names, colName )
cat_results$cont_tables <- c(cat_results$cont_tables, matrix(cross_tab,
nrow=nrow(cross_tab), ncol = ncol(cross_tab)))
if (length(unique_cats) == 2) {
# run Fisher test
fisher_test <- fisher.test(cross_tab, conf.int = TRUE, conf.level = 0.95)
cat_results$pvalues <- c(cat_results$pvalues, fisher_test$p.value)
cat_results$odds_ratio <- c(cat_results$odds_ratio, fisher_test$estimate)
cat_results$odd_ratio_CI <- c(cat_results$odd_ratio_CI, fisher_test$conf.int)
} else {
# run chisquare test
# no odds ratio for chi-square test
chi_test <- chisq.test(cross_tab)
cat_results$pvalues <- c(cat_results$pvalues, chi_test$p.value)
cat_results$odds_ratio <- c(cat_results$odds_ratio, NA)
cat_results$odd_ratio_CI <- c(cat_results$odd_ratio_CI, c(NA, NA))
}
}
print(cat_results)
cat_results$cont_tables
ncol(cross_tab)
nrow(cross_tab)
matrix(cross_tab,
nrow=nrow(cross_tab), ncol = ncol(cross_tab))
cross_tab
cat_results <- list(pvalues = c(), odds_ratio = c(), feature_names = c())
#using fisher test or chisquare test for categorical associations
cat_features <- c(2,3,7,8,9)
for (i in cat_features) {
unique_cats <- unique(df[ , i])
cross_tab <- table(df[ , i], df[ , "Exited"])
colName <- colnames(df)[i]
cat_results$feature_names <- c(cat_results$feature_names, colName )
#cat_results$cont_tables <- c(cat_results$cont_tables, matrix(cross_tab,
nrow=nrow(cross_tab), ncol = ncol(cross_tab)))
cat_results <- list(pvalues = c(), odds_ratio = c(), feature_names = c())
#using fisher test or chisquare test for categorical associations
cat_features <- c(2,3,7,8,9)
for (i in cat_features) {
unique_cats <- unique(df[ , i])
cross_tab <- table(df[ , i], df[ , "Exited"])
colName <- colnames(df)[i]
cat_results$feature_names <- c(cat_results$feature_names, colName )
#cat_results$cont_tables <- c(cat_results$cont_tables, matrix(cross_tab,
#nrow=nrow(cross_tab), ncol = ncol(cross_tab)))
if (length(unique_cats) == 2) {
# run Fisher test
fisher_test <- fisher.test(cross_tab, conf.int = TRUE, conf.level = 0.95)
cat_results$pvalues <- c(cat_results$pvalues, fisher_test$p.value)
cat_results$odds_ratio <- c(cat_results$odds_ratio, fisher_test$estimate)
#cat_results$odd_ratio_CI <- c(cat_results$odd_ratio_CI, fisher_test$conf.int)
} else {
# run chisquare test
# no odds ratio for chi-square test
chi_test <- chisq.test(cross_tab)
cat_results$pvalues <- c(cat_results$pvalues, chi_test$p.value)
cat_results$odds_ratio <- c(cat_results$odds_ratio, NA)
#cat_results$odd_ratio_CI <- c(cat_results$odd_ratio_CI, c(NA, NA))
}
}
print(cat_results)
cat_results_df <- data.frame("feature" = cat_results$feature_names,
"pval" = cat_results$pvalues,
"odds" = round(cat_results$odds_ratio, 3))
sign_features <- cat_results_df[cat_results_df$pval<0.05, "feature"]
print(sign_features)
View(df)
cont_features <- c(1,4,5,6,10)
shapiro_results <- list("pvalue" = c(), "feature" = c())
#checking normality assumptions
for (i in cont_features) {
pval <- shapiro.test(df[ , i])$p.value
colname <- colnames(df)[i]
shapiro_results$pvalue <- c(shapiro_results$pvalue, pval)
shapiro_results$feature <- c(shapiro_results$feature, colname)
}
shapiro.test(df[, 1])
shapiro.test(df$CreditScore)
install.packages('nortest')
cont_features <- c(1,4,5,6,10)
shapiro_results <- list("pvalue" = c(), "feature" = c())
#checking normality assumptions
# using Anderson-Darling normality test as n_samples > 5000
library(nortest)
for (i in cont_features) {
pval <- ad.test(df[ , i])$p.value
colname <- colnames(df)[i]
shapiro_results$pvalue <- c(shapiro_results$pvalue, pval)
shapiro_results$feature <- c(shapiro_results$feature, colname)
}
print(shapiro_results)
cor.test(df)
cor.test(df[ , 1], df[ , 4])
df_cont <- select(df, cont_features)
View(df_cont)
pairs(df_cont)
cor.test(df_cont)
View(df_cont)
cor(df_cont)
df_cont <- select(df, cont_features)
pairs(df_cont)
cor(df_cont)
df_cont <- select(df, cont_features)
cor(df_cont)
pairs(df_cont)
df_cont <- select(df, cont_features)
cor_matrix <- cor(df_cont)
print(cor_matrix)
pairs(df_cont)
df_cont$Exited <- df$Exited
View(df_cont)
df_cont$Exited <- df$Exited
levels(df_cont[df_cont$Exited == "1"]) <- "YES"
df_cont$Exited <- df$Exited
levels(df_cont$Exited)[levels(df_cont$Exited) == "1"] <- "YES"
levels(df_cont$Exited)[levels(df_cont$Exited) == "0"] <- "NO"
cont_cols <- colnames(df_cont)[-1]
cont_cols
View(df_cont)
# drawing boxplots
cont_vars <- colnames(df_cont)[1:4]
ggplot(data = df_cont, aes(x=Exited)) + geom_boxplot() + facet_wrap(~cont_vars)
# drawing boxplots
cont_vars <- colnames(df_cont)[1:4]
ggplot(data = df_cont, aes(x=Exited, y = cont_vars)) + geom_boxplot() + facet_wrap(~cont_vars)
# drawing boxplots
cont_vars <- colnames(df_cont)[1:4]
ggplot(data = df_cont) + geom_boxplot(aes(x=Exited)) + facet_wrap(~cont_vars)
qplot(data = df_cont, facets = ~cont_vars, x = Exited)
melt(df_cont)
#ggplot(data = df_cont) + geom_boxplot(aes(x=Exited)) + facet_wrap(~cont_vars)
ggplot(data=df_cont, aes(x=Exited, y= "EstimatedSalary")) + geom_boxplot()
boxplot(df$EstimatedSalary, group_by = df$Exited)
boxplot(df$EstimatedSalary ~ df$Exited)
boxplot(df$Balance ~ df$Exited)
kruskal.test(df$Balance ~ df$Exited)
kruskal.test(df$EstimatedSalary ~ df$Exited)
install.packages("gridExtra")
# drawing boxplots
cont_vars <- colnames(df_cont)[1:4]
library(gridExtra)
# we have four continuous features
# creating a 2x2 plot
plot1 <- boxplot(df$EstimatedSalary ~ df$Exited)
plot2 <- boxplot(df$EstimatedSalary ~ df$Exited)
plot3 <- boxplot(df$EstimatedSalary ~ df$Exited)
plot4 <- boxplot(df$EstimatedSalary ~ df$Exited)
grid.arrange(plot1, plot2, plot3, plot4, ncol=2, nrow=2)
# drawing boxplots
cont_vars <- colnames(df_cont)[1:4]
library(gridExtra)
# we have four continuous features
# creating a 2x2 plot
par(mfrow=c(2,2))
plot1 <- boxplot(df$EstimatedSalary ~ df$Exited)
plot2 <- boxplot(df$EstimatedSalary ~ df$Exited)
plot3 <- boxplot(df$EstimatedSalary ~ df$Exited)
plot4 <- boxplot(df$EstimatedSalary ~ df$Exited)
grid.arrange(plot1, plot2, plot3, plot4, ncol=2, nrow=2)
# drawing boxplots
cont_vars <- colnames(df_cont)[1:4]
library(gridExtra)
# we have four continuous features
# creating a 2x2 plot
par(mfrow=c(2,2))
plot1 <- boxplot(df$EstimatedSalary ~ df$Exited)
plot2 <- boxplot(df$EstimatedSalary ~ df$Exited)
plot3 <- boxplot(df$EstimatedSalary ~ df$Exited)
plot4 <- boxplot(df$EstimatedSalary ~ df$Exited)
grid.arrange(plot1, plot2, plot3, plot4, ncol=2)
# drawing boxplots
cont_vars <- colnames(df_cont)[1:4]
library(ggpubr)
install.packages("ggpubr")
# drawing boxplots
cont_vars <- colnames(df_cont)[1:4]
library(ggpubr)
# we have four continuous features
# creating a 2x2 plot
#par(mfrow=c(2,2))
plot1 <- boxplot(df$EstimatedSalary ~ df$Exited)
plot2 <- boxplot(df$EstimatedSalary ~ df$Exited)
plot3 <- boxplot(df$EstimatedSalary ~ df$Exited)
plot4 <- boxplot(df$EstimatedSalary ~ df$Exited)
ggarrange(plot1,plot2,plot3,plot4,ncol = 2)
install.packages("gridGraphics")
# drawing boxplots
cont_vars <- colnames(df_cont)[1:4]
library(ggpubr)
library(gridGraphics)
# we have four continuous features
# creating a 2x2 plot
#par(mfrow=c(2,2))
plot1 <- boxplot(df$EstimatedSalary ~ df$Exited)
plot2 <- boxplot(df$EstimatedSalary ~ df$Exited)
plot3 <- boxplot(df$EstimatedSalary ~ df$Exited)
plot4 <- boxplot(df$EstimatedSalary ~ df$Exited)
ggarrange(plot1,plot2,plot3,plot4,ncol = 2)
# drawing boxplots
cont_vars <- colnames(df_cont)[1:4]
library(ggpubr)
library(gridGraphics)
# we have four continuous features
# creating a 2x2 plot
#par(mfrow=c(2,2))
plot1 <- boxplot(df$EstimatedSalary ~ df$Exited)
plot2 <- boxplot(df$EstimatedSalary ~ df$Exited)
plot3 <- boxplot(df$EstimatedSalary ~ df$Exited)
plot4 <- boxplot(df$EstimatedSalary ~ df$Exited)
plt_list <- c(plot1, plot2, plot3, plot4)
ggarrange(plt_list,ncol = 2)
cowplot::plot_grid(plotlist = plt_list,nrow = 2)
cowplot::plot_grid(plotlist = plt_list[1:4],nrow = 2)
cowplot::plot_grid(plotlist = plt_list,nrow = 2)
warnings()
str(plot1)
levels(df_cont$Exited)
# drawing boxplots
cont_vars <- colnames(df_cont)[1:4]
library(ggpubr)
library(gridGraphics)
# we have four continuous features
# creating a 2x2 plot
#par(mfrow=c(2,2))
plot1 <- boxplot(df$EstimatedSalary ~ df$Exited)
plot2 <- boxplot(df$CreditScore ~ df$Exited)
plot3 <- boxplot(df$Balance ~ df$Exited)
plot4 <- boxplot(df$Tenure ~ df$Exited)
plt_list <- c(plot1, plot2, plot3, plot4)
ggarrange(plt_list,ncol = 2)
# we have four continuous features
# creating a 2x2 plot
#par(mfrow=c(2,2))
plot1 <- boxplot(df$EstimatedSalary ~ df$Exited)
plot1
plot1.show()
plot(plot1)
plot1
pvals = c()
var_names = c()
for (i in 1:4) {
varname = colnames(df_cont)[i]
ind_var <- df_cont[ , i]
stat_test <- wilcox.test(ind_var~df_cont$Exited)
var_names <- c(var_names, varname)
pvals <- c(pvals, stat_test$p.value)
}
pvals
var_names
pvals[pvals<0.05]
cor(df$Balance, df$Exited)
boxplot(df$Balance ~ df$Exited)
boxplot(df$Tenure ~ df$Exited)
boxplot(df$Age ~ df$Exited)
boxplot(df$CreditScore ~ df$Exited)
pvals = c()
var_names = c()
for (i in 1:4) {
varname = colnames(df_cont)[i]
ind_var <- df_cont[ , i]
stat_test <- wilcox.test(ind_var~df_cont$Exited)
var_names <- c(var_names, varname)
pvals <- c(pvals, stat_test$p.value)
}
cont_res <- list("pvals"=pvals, "feature" = var_names)
cont_res
# drawing boxplots
cont_vars <- colnames(df_cont)[1:4]
library(ggpubr)
library(gridGraphics)
# we have four continuous features
# creating a 2x2 plot
#par(mfrow=c(2,2))
plot1 <- boxplot(df$EstimatedSalary ~ df$Exited)
plot2 <- boxplot(df$CreditScore ~ df$Exited)
plot3 <- boxplot(df$Balance ~ df$Exited)
plot4 <- boxplot(df$Tenure ~ df$Exited)
plt_list <- c(plot1, plot2, plot3, plot4)
grid.arrange(grobs = plt_list, ncol=2, nrow=2)
# drawing boxplots
cont_vars <- colnames(df_cont)[1:4]
library(ggpubr)
library(gridGraphics)
# we have four continuous features
# creating a 2x2 plot
#par(mfrow=c(2,2))
plot1 <- boxplot(df$EstimatedSalary ~ df$Exited, xlab = "Exited",
ylab = "Estimated salary")
plot2 <- boxplot(df$CreditScore ~ df$Exited, xlab = "Exited",
ylab = "Credit score")
plot3 <- boxplot(df$Balance ~ df$Exited, xlab = "Exited",
ylab = "Balance")
plot4 <- boxplot(df$Tenure ~ df$Exited, xlab = "Exited",
ylab = "Tenure")
plt_list <- c(plot1, plot2, plot3, plot4)
grid.arrange(grobs = plt_list, ncol=2, nrow=2)
# drawing boxplots
cont_vars <- colnames(df_cont)[1:4]
library(ggpubr)
library(gridGraphics)
# we have four continuous features
# creating a 2x2 plot
#par(mfrow=c(2,2))
plot1 <- boxplot(df$EstimatedSalary ~ df$Exited, xlab = "Exited",
ylab = "Estimated salary")
plot2 <- boxplot(df$CreditScore ~ df$Exited, xlab = "Exited",
ylab = "Credit score")
plot3 <- boxplot(df$Balance ~ df$Exited, xlab = "Exited",
ylab = "Balance")
plot4 <- boxplot(df$Tenure ~ df$Exited, xlab = "Exited",
ylab = "Tenure")
plt_list <- c(plot1, plot2, plot3, plot4)
grid.arrange(grobs = plt_list, ncol=4)
# drawing boxplots
cont_vars <- colnames(df_cont)[1:4]
library(ggpubr)
library(gridGraphics)
# we have four continuous features
# creating a 2x2 plot
#par(mfrow=c(2,2))
plot1 <- boxplot(df$EstimatedSalary ~ df$Exited, xlab = "Exited",
ylab = "Estimated salary")
plot2 <- boxplot(df$CreditScore ~ df$Exited, xlab = "Exited",
ylab = "Credit score")
plot3 <- boxplot(df$Balance ~ df$Exited, xlab = "Exited",
ylab = "Balance")
plot4 <- boxplot(df$Tenure ~ df$Exited, xlab = "Exited",
ylab = "Tenure")
plt_list <- list(plot1, plot2, plot3, plot4)
grid.arrange(grobs = plt_list, ncol=4)
# drawing boxplots
cont_vars <- colnames(df_cont)[1:4]
library(ggpubr)
library(gridGraphics)
# we have four continuous features
# creating a 2x2 plot
#par(mfrow=c(2,2))
plot1 <- boxplot(df$EstimatedSalary ~ df$Exited, xlab = "Exited",
ylab = "Estimated salary")
plot2 <- boxplot(df$CreditScore ~ df$Exited, xlab = "Exited",
ylab = "Credit score")
plot3 <- boxplot(df$Balance ~ df$Exited, xlab = "Exited",
ylab = "Balance")
plot4 <- boxplot(df$Tenure ~ df$Exited, xlab = "Exited",
ylab = "Tenure")
pvals = c()
var_names = c()
for (i in 1:4) {
varname = colnames(df_cont)[i]
ind_var <- df_cont[ , i]
stat_test <- wilcox.test(ind_var~df_cont$Exited)
var_names <- c(var_names, varname)
pvals <- c(pvals, stat_test$p.value)
}
cont_res <- list("pvals"=pvals, "feature" = var_names)
cont_res$pvals < 0.05
cont_res[cont_res$pvals < 0.05, "feature"]
cont_res_df <- data.frame("feature" = cont_res$feature, "pval" = cont_res$pvals)
cont_res_df[cont_res_df$pval < 0.05, "feature"]
plot5 <- boxplot(df$Age ~ df$Exited, xlab = "Exited",
ylab = "Age")
# drawing boxplots
cont_vars <- colnames(df_cont)[1:4]
library(ggpubr)
library(gridGraphics)
# we have four continuous features
# creating a 2x2 plot
#par(mfrow=c(2,2))
plot1 <- boxplot(df$EstimatedSalary ~ df$Exited, xlab = "Exited",
ylab = "Estimated salary")
plot2 <- boxplot(df$CreditScore ~ df$Exited, xlab = "Exited",
ylab = "Credit score")
plot3 <- boxplot(df$Balance ~ df$Exited, xlab = "Exited",
ylab = "Balance")
plot4 <- boxplot(df$Tenure ~ df$Exited, xlab = "Exited",
ylab = "Tenure")
plot5 <- boxplot(df$Age ~ df$Exited, xlab = "Exited",
ylab = "Age")
